rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Project access control
    match /projects/{projectId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.collaborators &&
        resource.data.collaborators[request.auth.uid] in ['admin', 'editor', 'viewer'];
      
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
      
      // Allow read access for collaboration invites
      allow read: if request.auth != null;
      
      // Sub-collections for comments and audit trail
      match /comments/{commentId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.collaborators;
      }
      
      match /audit_trail/{auditId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.collaborators;
        allow write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.collaborators &&
          get(/databases/$(database)/documents/projects/$(projectId)).data.collaborators[request.auth.uid] in ['admin', 'editor'];
      }
    }
    
    // Templates - users can read/write their own templates
    match /templates/{templateId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || request.auth.uid == request.resource.data.createdBy);
    }
  }
}
